version: "3.9"

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    container_name: broker-bot-app
    volumes:
      - ..:/app:cached
    command: sleep infinity
    # Atribuir a mesma rede para o container app
    networks:
      - app-network
    # Se for usar env_file para ler variáveis ou environment inline:
    # environment:
    #   RABBITMQ_USER: "broker@gmail.com"
    #   RABBITMQ_PASSWORD: "broker2024"
    #   RABBITMQ_HOST: "rabbitmq"
    #   RABBITMQ_PORT: "5672"
    #   REDIS_HOST: "redis"
    #   REDIS_PORT: "6379"

  db:
    image: postgres:15-alpine
    container_name: broker-bot-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: broker-bot-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    environment:
      RABBITMQ_DEFAULT_USER: broker
      RABBITMQ_DEFAULT_PASS: broker2024
      RABBITMQ_DEFAULT_VHOST: /

  redis:
    container_name: broker-bot-redis
    image: redis:alpine
    command: redis-server --appendonly yes --replica-read-only no
    restart: unless-stopped
    networks:
      - app-network
    # Normalmente, o Redis roda na porta interna 6379.
    # Se quiser expor localmente, faça "6379:6379".
    ports:
      - "6380:6379"

volumes:
  postgres-data:
  rabbitmq-data:
  redis-data:

networks:
  app-network:
    driver: bridge
